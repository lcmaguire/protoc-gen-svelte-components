// @generated by protoc-gen-es v1.2.0
// @generated from file proto/example.proto (package tutorial, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message tutorial.Example
 */
export const Example = proto3.makeMessageType(
  "tutorial.Example",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message tutorial.GetExampleRequest
 */
export const GetExampleRequest = proto3.makeMessageType(
  "tutorial.GetExampleRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tutorial.DeleteExampleRequest
 */
export const DeleteExampleRequest = proto3.makeMessageType(
  "tutorial.DeleteExampleRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tutorial.ListExampleRequest
 */
export const ListExampleRequest = proto3.makeMessageType(
  "tutorial.ListExampleRequest",
  [],
);

/**
 * @generated from message tutorial.ListExampleResponse
 */
export const ListExampleResponse = proto3.makeMessageType(
  "tutorial.ListExampleResponse",
  () => [
    { no: 1, name: "examples", kind: "message", T: Example, repeated: true },
  ],
);

/**
 * would need to contain the following info
 *
 * Expected behaviour (Create, Get, List, Delete, Update)
 * ResourceName path
 *
 * a way for UI to decide how this should be rendered
 *
 * e.g. 
 * Get is from mysite.com/myResource/{uuid}
 * Or if it is displayed in a nested view, not based upon url.
 *
 * Same as for if delete (after deletion is performed what should be done?)
 *
 *
 * @generated from message tutorial.MyMethodDesc
 */
export const MyMethodDesc = proto3.makeMessageType(
  "tutorial.MyMethodDesc",
  () => [
    { no: 2, name: "bar", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message tutorial.MyMessage
 */
export const MyMessage = proto3.makeMessageType(
  "tutorial.MyMessage",
  [],
);

